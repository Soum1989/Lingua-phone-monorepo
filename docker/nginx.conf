events {
    worker_connections 1024;
}

http {
    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

<<<<<<< HEAD
    # --- Remove the upstream block entirely ---
    # The upstream block is for internal Docker networking or Kubernetes-internal service discovery.
    # For Cloud Run, you proxy directly to the external URL.
    # upstream backend {
    #     server lingua-backend-service:3002;
    # }

    server {
        # --- Change listen directive to use the PORT environment variable ---
        # Cloud Run injects the PORT environment variable, which is dynamically assigned.
        listen ${PORT}; 
        
        # Ensure this matches the host your frontend is served on, or use _ for default
        # Using your frontend's domain is better if you have multiple domains proxied by this Nginx
        server_name lingua-phone.gketurns10.com; 
=======
    upstream backend {
        server lingua-backend-service:3002;
    }

    server {
        # Use fixed port 80
        listen 80;
        
        server_name localhost;
>>>>>>> ec28e636408188dd7a90584f2b5ceb9d903059d8

        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
<<<<<<< HEAD
            # This ensures that requests for nested routes (e.g., /users/123)
            # are correctly handled by your frontend's router.
=======
>>>>>>> ec28e636408188dd7a90584f2b5ceb9d903059d8
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            # --- Update proxy_pass to the actual backend Cloud Run URL ---
            # Use HTTPS because Cloud Run services are served over HTTPS.
            proxy_pass https://lingua-backend-261779013975.us-central1.run.app; 

            # These headers are essential for passing request details to the backend
            proxy_set_header Host $host; # The original host requested by the client (e.g., lingua-phone.gketurns10.com)
            proxy_set_header X-Real-IP $remote_addr; # The original client IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs that have forwarded the request
            proxy_set_header X-Forwarded-Proto $scheme; # The original protocol (http or https)

            # Required for proxying to HTTPS backends
            proxy_ssl_server_name on; 
            # Cautious: Disables SSL cert verification for the backend. 
            # For Cloud Run to Cloud Run, this is generally acceptable for ease of setup.
            # If you need higher security, consider proxy_ssl_verify on and proxy_ssl_trusted_certificate.
            proxy_ssl_verify off; 
        }

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    }
}
